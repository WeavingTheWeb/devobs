---
# Retrieve the current hostname, because {{ ansible_hostname }} still contains the old name
- shell: hostname
  register: current_hostname

- name: Install MySQL Packages
  sudo: yes
  apt: pkg={{ item }} state=latest
  with_items:
    - mysql-server
    - mysql-client
    - python-mysqldb

- name: Update root password for all root accounts
  mysql_user: name=root host={{ item }} check_implicit_admin=yes password={{ mysql.root_password }} login_user=root login_password={{ mysql.root_password }}
  with_items:
    - "{{ current_hostname.stdout | lower }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: Import dump
  mysql_db: name={{ mysql.database }} state=import login_user=root login_password={{ mysql.root_password }} target=/vagrant/{{ mysql.dump }}
  when: mysql.dump

- name: Ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent login_user=root login_password={{ mysql.root_password }}
  with_items:
    - localhost
    - "{{ current_hostname.stdout | lower }}"

- name: Create databases
  mysql_db:
    name: "{{ item.database }}"
    state: present
    login_user: root
    login_password: "{{ mysql.root_password }}"
  with_items: "{{ mysql.users }}"

- name: Create users
  mysql_user:
    name: "{{ item.user }}"
    password: "{{ item.password }}"
    priv: "{{ item.database }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ mysql.root_password }}"
  with_items: "{{ mysql.users }}"

- name: Set up database access
  sudo: yes
  template:
    src: my.cnf.tpl
    dest: /etc/mysql/my.cnf
  notify: restart mysql

- name: Create backup user home directory
  sudo: true
  file:
    path: "{{ deployment.root }}/current/provisioning/backup"
    owner: nobody
    state: directory

- name: Install backup user
  user:
    name: backup_devobs
    groups: mysql
    createhome: true
    home: "{{ deployment.root }}/current/provisioning/backup"

- name: Download Percona release
  shell: >
    export PERCONA_RELEASE=https://repo.percona.com/apt/percona-release_0.1-3.`lsb_release -sc`_all.deb;
    /bin/bash -c '! test -e ~vagrant/.installed_percona && `which wget` '$PERCONA_RELEASE' -O /tmp/percona.deb &&
    touch ~vagrant/.installed_percona || echo "Percona has already been installed"'

- name: Install percona release
  sudo: yes
  shell: /bin/bash -c '(test -e /tmp/percona.dev && cd /tmp && sudo dpkg -i percona.deb) || echo "Percona already installed"'

- name: Update apt
  sudo: yes
  apt: update_cache=yes

- name: Install percona Xtrabackup
  sudo: yes
  apt: pkg={{ item }} state=latest
  with_items:
    - percona-xtrabackup

- name: Flush handlers to apply config changes
  meta: flush_handlers
